---
- include: novnc.yml
  when: openstack_install_method != 'distro'
  tags: novnc

- block:
  - name: remove retired nova controller services
    upstart_service:
      name: "{{ item.name }}"
      user: "{{ item.user }}"
      cmd: "{{ item.cmd }}"
      config_dirs: "{{ item.config_dirs }}"
      state: "{{ item.state }}"
    with_items:
      - "{{ nova.services.nova_cert }}"

  - name: install nova controller services (ubuntu)
    upstart_service:
      name: "{{ item.name }}"
      user: "{{ item.user }}"
      cmd: "{{ item.cmd }}"
      config_dirs: "{{ item.config_dirs }}"
    with_items:
      - "{{ nova.services.nova_api }}"
      - "{{ nova.services.nova_conductor }}"
      - "{{ nova.services.nova_consoleauth }}"
      - "{{ nova.services.nova_scheduler }}"
      - "{{ nova.services.nova_novncproxy }}"
  when: ursula_os == 'ubuntu'

- block:
  - name: remove retired nova controller services
    systemd_service:
      name: "{{ item.name }}"
      cmd: "{{ item.cmd }}"
      state: "{{ item.state }}"
    with_items:
      - "{{ nova.services.nova_cert }}"
      - "{{ nova.services.nova_cells }}"

  - name: install nova controller services (rhel)
    systemd_service:
      name: "{{ item.name }}"
      description: "{{ item.desc }}"
      type: "{{ item.type }}"
      notify_access: "{{ item.notify_access|default(omit) }}"
      user: "{{ item.user }}"
      cmd: "{{ item.cmd }}"
      config_dirs: "{{ item.config_dirs }}"
      config_files: "{{ item.config_files }}"
      restart: "{{ item.restart }}"
    with_items:
      - "{{ nova.services.nova_api }}"
      - "{{ nova.services.nova_conductor }}"
      - "{{ nova.services.nova_consoleauth }}"
      - "{{ nova.services.nova_scheduler }}"
      - "{{ nova.services.nova_novncproxy }}"
  when: ursula_os == 'rhel'

#FIXME do we need this on rhosp?
- name: install nova-quota-sync script
  copy: src=nova-quota-sync
        dest=/usr/local/sbin/nova-quota-sync
        mode=0755
        owner=root

- name: sync nova database
  command: nova-manage db sync
  when: database_create.changed or force_sync|default(false)
  run_once: true
  changed_when: true
  notify: restart nova services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: sync nova api database
  command: nova-manage api_db sync
  when: database_create.changed or force_sync|default(false)
  run_once: true
  changed_when: true
  notify: restart nova services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: trigger restart on upgrades
  debug:
    msg: "Triggering service restart for upgrade"
  changed_when: True
  notify: restart nova services
  when: code_has_changed | default(False) and
        upgrade | default(False)

- meta: flush_handlers

- name: start nova controller services
  service:
    name: "{{ item.name }}"
    state: started
    enabled: True
  with_items:
    - "{{ nova.services.nova_api }}"
    - "{{ nova.services.nova_conductor }}"
    - "{{ nova.services.nova_consoleauth }}"
    - "{{ nova.services.nova_scheduler }}"
    - "{{ nova.services.nova_novncproxy }}"

- include: monitoring.yml
  tags:
    - monitoring
    - common
  when: monitoring.enabled|default(True)
